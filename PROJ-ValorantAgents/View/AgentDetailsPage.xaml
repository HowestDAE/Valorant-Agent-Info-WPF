<Page x:Class="PROJ_ValorantAgents.View.AgentDetailsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PROJ_ValorantAgents.View"
      xmlns:vm="clr-namespace:PROJ_ValorantAgents.ViewModel"
      xmlns:conv="clr-namespace:PROJ_ValorantAgents.View.Converters"
      mc:Ignorable="d" 
      d:DesignHeight="720" d:DesignWidth="1280"
      Title="AgentDetailsPage">

    <Page.DataContext>
        <vm:AgentDetailsVM x:Name="AgentDetailsVM"/>
    </Page.DataContext>

    <Page.Resources>
        <conv:UppercaseConverter x:Key="UppercaseConverter"/>
        <vm:AgentDetailsVM x:Key="AgentDetailsVM"/>
        <SolidColorBrush x:Key="Red" Color="#FD4556"/>
        <SolidColorBrush x:Key="OffWhite" Color="#ECE8E1"/>
        <SolidColorBrush x:Key="DarkBlue" Color="#0F1823"/>
        <SolidColorBrush x:Key="Gray" Color="#9C9994"/>


        <FontFamily x:Key="DinNextMedium">pack://application:,,,/Resources/Fonts/DINNextLTPro-Medium.ttf#DIN Next LT Pro Medium</FontFamily>
        <FontFamily x:Key="Tungsten">pack://application:,,,/Resources/Fonts/Tungsten-Bold.otf#My Font</FontFamily>

        <FontFamily x:Key="ProximaNovaThin">pack://application:,,,/Resources/Fonts/Proxima-Nova-Thin.otf#Proxima Nova Th</FontFamily>
        <FontFamily x:Key="ProximaNovaBold">pack://application:,,,/Resources/Fonts/Proxima-Nova-Bold.otf#Proxima Nova Rg</FontFamily>


        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Command" Value="{Binding DataContext.SelectAbilityCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
        </Style>

        <Storyboard x:Key="PopupAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                       Duration="0:0:0.3">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                       Duration="0:0:0.3">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Duration="0">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

    </Page.Resources>


    <Grid Background="{StaticResource OffWhite}">


    



        <!-- ABILITIES DETAILS -->
        <Grid>

            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".1*"/>
                <ColumnDefinition Width="1.4*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height=".5*"/>
                <RowDefinition Height=".3*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=".4*"/>
                <RowDefinition Height=".3*"/>
            </Grid.RowDefinitions>

            <Viewbox HorizontalAlignment="Left"  Grid.Column="1" Grid.Row="1">
                <TextBlock Text="{Binding CurrentAbility.displayName, Converter={StaticResource UppercaseConverter}}"
                      FontFamily="{StaticResource Tungsten}"/>
            </Viewbox>


            <!-- BACKGROUND DECORATION -->
            
            
            <Rectangle Grid.RowSpan="4" Grid.Row="2" Grid.Column="1" Fill="{StaticResource Gray}"
                       Width="1" Height="Auto" HorizontalAlignment="Left"/>

            <Rectangle Grid.RowSpan="2" Grid.Column="2" Fill="{StaticResource Gray}"
                       Width="1" Height="Auto" HorizontalAlignment="Left"/>

            <Rectangle Grid.Row="1" Grid.Column="1" Stroke="{StaticResource Gray}"
                       Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                
            </Rectangle>
            
            

            <Rectangle Grid.ColumnSpan="4" Grid.Row="3" Fill="{StaticResource Gray}"
                       Width="Auto" Height="1" VerticalAlignment="Center"/>

            <Grid Grid.ColumnSpan="10" Grid.RowSpan="10">
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=BackgroundPath}"
                               Stretch="Uniform"/>
                </Grid.OpacityMask>


                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>

                <Path Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
              x:Name="BackgroundPath" 
              Stroke="Black" 
                Fill="{StaticResource Red}" 
                HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                Stretch="Uniform">
                    <Path.Data>
                        <PathGeometry>
                            <PathFigure StartPoint="40,0">
                                <LineSegment Point="100,0" />
                                <LineSegment Point="100,100" />
                                <LineSegment Point="-5,100" />
                            </PathFigure>
                        </PathGeometry>
                    </Path.Data>
                </Path>

                <Viewbox Grid.Column="1" >
                    <Image Source="{Binding CurrentAgent.background }" 
                     Margin="-100" Stretch="UniformToFill"/>
                </Viewbox>
            </Grid>

            <Image Source="{Binding CurrentAgent.fullPortrait }" Grid.ColumnSpan="10" Grid.RowSpan="10"
                   VerticalAlignment="Top" HorizontalAlignment="Right" 
                   Stretch="UniformToFill"
                   Margin="0,-198,-708,0"  Height="1875"/>

            <StackPanel Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                <MediaElement x:Name="myMediaElement" Source="{Binding CurrentAbility.tutorialVideo}" Stretch="UniformToFill"
                  RenderTransformOrigin="0.5,0.5">
                    <MediaElement.RenderTransform>
                        <ScaleTransform ScaleX="0" ScaleY="0"/>
                    </MediaElement.RenderTransform>
                    <MediaElement.Triggers>
                        <EventTrigger RoutedEvent="MediaElement.MediaOpened">
                            <BeginStoryboard Storyboard="{StaticResource PopupAnimation}" />
                        </EventTrigger>
                    </MediaElement.Triggers>
                </MediaElement>


                <TextBlock Text="{Binding CurrentAbility.description}" Padding="0,30"
                           FontFamily="{StaticResource DinNextMedium}" FontSize="20" TextWrapping="Wrap"
                           VerticalAlignment="Bottom"/>
            </StackPanel>

            
            <ItemsControl Grid.Column="1" Grid.Row="3"
             ItemsSource="{Binding CurrentAgent.abilities}">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="{Binding CurrentAgent.abilities.Count}"  />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <Button BorderThickness="1" BorderBrush="{StaticResource Gray}" Width="100" Height="100" 
                                     Background="{StaticResource OffWhite}" Padding="10"
                                     CommandParameter="{Binding}">

                                <Rectangle Fill="{StaticResource Red}" Stretch="UniformToFill">
                                    <Rectangle.OpacityMask>
                                        <ImageBrush ImageSource="{Binding displayIcon}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </Viewbox>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>



            </ItemsControl>


        </Grid>



    </Grid>
</Page>
